# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy ASP.Net Core app to Azure Web App - AS-BPCalculator

on:
  push:
    branches:
      - feature1
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"adhamgsalem_bp-master" /o:"adhamgsalem" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build --configuration Release
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
          
      - name: dotnet publish
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp
          
  unit-test:
    runs-on: windows-latest
    needs: build

    steps:
      - uses: actions/checkout@v2
      
      - name: Run unit tests
        run : dotnet test
        working-directory : ./bp-master.Tests

  acceptance-test:
    runs-on: windows-latest
    needs: unit-test

    steps:
      - uses: actions/checkout@v2
      
      - name: Run acceptance tests
        run : dotnet test
        working-directory : ./bp-master.BDDTests
        
  deploy-QA:
    runs-on: windows-latest
    needs: acceptance-test
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'AS-BPCalculator'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_4F4DF4CCCE794869A5A9BDC1F750D718 }}
          package: .
 
        
  selenuim-test:
    runs-on: windows-latest
    needs: deploy-QA

    steps:
      - uses: actions/checkout@v2
      
      - name: Run selenuim tests
        run : dotnet test
        working-directory : ./SeleniumTests

  k6_load_test:
    runs-on: windows-latest
    needs: deploy-QA

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install k6
        run: choco install k6
      - name: Install packages
        run: |
          npm install
      - name: Start server and run tests
        run: |
          npm start & npx wait-on http://as-bpcalculator.azurewebsites.net/
          ./bp-master.K6Tests run Test1.js

  deploy-PROD:
    runs-on: windows-latest
    needs: selenuim-test
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'AS-BPCalculator-Staging'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_FB5B9A0AB0D24B108B7B372ECCF3F1CE }}
          package: .